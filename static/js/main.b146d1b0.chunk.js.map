{"version":3,"sources":["components/Card.js","components/CoktailSearch.js","components/SearchIngridient.js","components/CocktailDetails.js","components/Slider.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Card","drink","ingredient","isFull","useState","showIngridients","setShowIngridients","idDrink","strCategory","strDrink","strInstructions","strImageSource","strDrinkThumb","ingredients","Object","keys","filter","key","includes","map","item","console","log","className","src","alt","onClick","to","strDescription","strType","toLowerCase","CocktailSearch","getData","useContext","Context","request","setRequest","cocktailsArray","setCocktailsArray","type","onChange","e","target","value","name","length","SearchIngridient","ingridientsArray","setIngridientsArray","CocktailDetails","id","useParams","info","setInfo","useEffect","fetch","then","response","json","data","drinks","window","history","back","Slider","children","numberToShow","number","setNumber","fade","setFade","slice","Main","cocktailsArr","setCocktailsArr","createContext","App","loading","setLoading","useCallback","param","stateSetter","Provider","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b146d1b0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({ drink, ingredient, isFull }) => {\r\n  const [showIngridients, setShowIngridients] = useState(false);\r\n\r\n  if (drink) {\r\n    const {\r\n      idDrink,\r\n      strCategory,\r\n      strDrink,\r\n      strImageSource,\r\n      strInstructions,\r\n      strDrinkThumb,\r\n    } = drink;\r\n\r\n    const ingredients = Object.keys(drink)\r\n      .filter((key) => key.includes(\"strIngredient\") && drink[key])\r\n      .map((item) => drink[item]);\r\n\r\n    console.log(drink);\r\n\r\n    return (\r\n      <div className={`column  card drink-card ${isFull && \"full-card\"}`}>\r\n        <img src={strDrinkThumb} alt=\"drink\" />\r\n        <div className=\"column info-wrapper\">\r\n          <h3>{strDrink}</h3>\r\n\r\n          {isFull && (\r\n            <>\r\n              <button onClick={() => setShowIngridients(!showIngridients)}>\r\n                {!showIngridients ? \"Show ingridients\" : \"Hide ingridients\"}\r\n              </button>\r\n              {showIngridients &&\r\n                ingredients.map((item) => <span>{item}</span>)}\r\n              <h3>Instructions</h3>\r\n              <p>{strInstructions}</p>\r\n            </>\r\n          )}\r\n\r\n          <span>{strCategory}</span>\r\n          {!isFull && <Link to={`/cocktailDetails/${idDrink}`}>More</Link>}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    const { strDescription, strType } = ingredient;\r\n\r\n    return (\r\n      <div className=\"row card ing-card\">\r\n        <div className=\"column\">\r\n          <h1>{strType}</h1>\r\n          <p>{strDescription}</p>\r\n        </div>\r\n        <img\r\n          src={`https://www.thecocktaildb.com/images/ingredients/${strType.toLowerCase()}.png`}\r\n          alt=\"drink\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nconst CocktailSearch = () => {\r\n  const { getData } = useContext(Context);\r\n\r\n  const [request, setRequest] = useState(\"\");\r\n  const [cocktailsArray, setCocktailsArray] = useState([]);\r\n\r\n  return (\r\n    <div className=\"column centered container\">\r\n      <h1>Cocktail</h1>\r\n      <div className=\"row centered\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setRequest(e.target.value)}\r\n          value={request}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            setRequest(\"\");\r\n            getData({ name: \"s\", value: request }, setCocktailsArray);\r\n          }}>\r\n          Search\r\n        </button>\r\n      </div>\r\n      <div className=\"wrapper row\">\r\n        {cocktailsArray?.length > 0 &&\r\n          cocktailsArray.map((item) => <Card drink={item} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CocktailSearch;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"./Card\";\r\nimport { Context } from \"../App\";\r\n\r\nconst SearchIngridient = () => {\r\n  const { getData } = useContext(Context);\r\n\r\n  const [request, setRequest] = useState(\"\");\r\n  const [ingridientsArray, setIngridientsArray] = useState([]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Ingridients</h1>\r\n      <div className=\"row centered\">\r\n        <input\r\n          type=\"text\"\r\n          value={request}\r\n          onChange={(e) => {\r\n            setRequest(e.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            setRequest(\"\");\r\n            getData({ name: \"i\", value: request }, setIngridientsArray);\r\n          }}>\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"wrapper row centered\">\r\n        {ingridientsArray?.length > 0 &&\r\n          ingridientsArray.map((item) => <Card ingredient={item} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchIngridient;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nconst CocktailDetails = () => {\r\n  const { id } = useParams();\r\n\r\n  const [info, setInfo] = useState();\r\n\r\n  const getInfo = () => {\r\n    fetch(\r\n      `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}&key=1`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setInfo(data.drinks[0]);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"column centered container\">\r\n      <h1>Details </h1>\r\n      {info && <Card drink={info} isFull={true} />}\r\n      <button onClick={() => window.history.back()}>Back</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CocktailDetails;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Slider = ({ children, numberToShow }) => {\r\n  const [number, setNumber] = useState(0);\r\n  const [fade, setFade] = useState(true);\r\n\r\n  console.log(children);\r\n\r\n  return (\r\n    <div className=\"column centered slider\">\r\n      <h1>Slider</h1>\r\n      <div className=\"row sl-wrapper centered\">\r\n        <button\r\n          onClick={() => {\r\n            setNumber(number - 1 < 0 ? children.length - 1 : number - 1);\r\n            setFade(!fade);\r\n          }}>\r\n          {\"<\"}\r\n        </button>\r\n        <div className={`slide row ${!fade ? \"fade\" : \"append\"}`}>\r\n          {children.slice(number, numberToShow + number)}\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            setNumber(number + 1 > children.length - 1 ? 0 : number + 1);\r\n            setFade(!fade);\r\n          }}>\r\n          {\">\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport Slider from \"./Slider\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nimport { Context } from \"../App\";\r\n\r\nconst Main = () => {\r\n  const { getData } = useContext(Context);\r\n\r\n  const [cocktailsArr, setCocktailsArr] = useState([]);\r\n\r\n  const quantityOfSlider = 5;\r\n\r\n  useEffect(() => {\r\n    getData({ name: \"f\", value: \"m\" }, setCocktailsArr);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"column centered main container\">\r\n      <h1>Cocktail of the day</h1>\r\n      {cocktailsArr.length > 0 && (\r\n        <Slider numberToShow={quantityOfSlider}>\r\n          {cocktailsArr.length > 0 &&\r\n            cocktailsArr.map((item) => <Card drink={item} />)}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { createContext, useCallback, useState } from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport CocktailSearch from \"./components/CoktailSearch\";\nimport SearchIngridient from \"./components/SearchIngridient\";\nimport CocktailDetails from \"./components/CocktailDetails\";\nimport Main from \"./components/Main\";\n\nexport const Context = createContext();\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n\n  const getData = useCallback((param, stateSetter) => {\n    setLoading(true);\n    fetch(\n      `https://www.thecocktaildb.com/api/json/v1/1/search.php?${param.name}=${param.value}&key=1`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setLoading(false);\n        stateSetter(data.drinks || data.ingredients);\n      });\n  }, []);\n\n  return (\n    <Router>\n      <Context.Provider value={{ getData }}>\n        <div className=\"App\">\n          <header>\n            <Link to=\"/\">Main</Link>\n            <Link to=\"/cocktailSearch\">Cocktails</Link>\n            <Link to=\"/searchIngridient\">Ingridients</Link>\n          </header>\n          {loading && <h1>Loading</h1>}\n        </div>\n\n        <Switch>\n          <Route path=\"/\" exact>\n            <Main />\n          </Route>\n          <Route path=\"/cocktailSearch\">\n            <CocktailSearch />\n          </Route>\n          <Route path=\"/searchIngridient\">\n            <SearchIngridient />\n          </Route>\n          <Route path=\"/cocktailDetails/:id\">\n            <CocktailDetails />\n          </Route>\n        </Switch>\n      </Context.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}